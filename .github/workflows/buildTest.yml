name: Test and Build

on:
  pull_request:
    branches:
        - dev
  workflow_dispatch:

jobs:
  check_files:
    runs-on: ubuntu-latest
    outputs:
      backend_changes: ${{ steps.backend_changes.outputs.backend_changes }}
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4
    - name: Check for changes in the backend folder
      id: backend_changes
      run: |
        git fetch origin dev
        git fetch origin ${{ github.head_ref }}
        if git diff --name-only origin/${{ github.base_ref }} origin/${{ github.head_ref }} | grep -q '^backend/'; then
          echo "backend_changes=true" >> $GITHUB_OUTPUT
        else
          echo "backend_changes=false" >> $GITHUB_OUTPUT
        fi
  test:
    runs-on: ubuntu-latest
    needs: check_files
    if: ${{ needs.check_files.outputs.backend_changes == 'true' }}
    steps:
    - uses: actions/checkout@v4
    - name: Cache Docker images based on compose.yml
      uses: actions/cache@v3
      with:
        path: /tmp/.docker-cache
        key: ${{ runner.os }}-docker-testcontainers-${{ hashFiles('compose.yml') }}
    - name: Pre-pull Testcontainers images using docker compose
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
          ls -l
          docker compose -f compose.yml pull
          mkdir -p /tmp/.docker-cache
          docker save $(docker compose -f compose.yml config --services | xargs) -o /tmp/.docker-cache/testcontainers.tar
    - name: Load cached images
      if: steps.cache.outputs.cache-hit == 'true'
      run: docker load -i /tmp/.docker-cache/testcontainers.tar
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'maven'
    - name: Test with Maven
      run: |
        cd ./backend/pinklifeline
        mvn test

  build_deploy:
      runs-on: ubuntu-latest
      needs: [test, check_files]
      if: ${{ needs.check_files.outputs.backend_changes == 'true' }}
      steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'
      - name: Get Version Name
        id: version
        run: |
          cd ./backend/pinklifeline
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "VERSION=$VERSION"
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-
      - name: Build Docker image
        run: docker build --cache-from type=local,src=/tmp/.buildx-cache --cache-to type=local,dest=/tmp/.buildx-cache -t sadatul/pinklifeline_dev:${{ steps.version.outputs.VERSION }} ./backend/pinklifeline
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push Docker Images to Docker Hub
        run: docker push sadatul/pinklifeline_dev:${{ steps.version.outputs.VERSION }}

      